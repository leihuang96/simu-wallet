services:
  user-service:
    container_name: user-service
    build:
      context: .
      dockerfile: user-service/Dockerfile
    networks:
      - default
    ports:
      - "8081:8080"
    volumes:
      - ./user-service/src:/app/src
      - ./user-service/target:/app/target
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/simuwallet_prod
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: asdf96
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - db
      - redis
      - kafka

  wallet-service:
    container_name: wallet-service
    build:
      context: .
      dockerfile: wallet-service/Dockerfile
    networks:
      - default
    ports:
      - "8082:8080"
    volumes:
      - ./wallet-service/src:/app/src
      - ./wallet-service/target:/app/target
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/simuwallet_prod
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: asdf96
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - db
      - redis
      - kafka

  exchange-rate-service:
    container_name: exchange-rate-service
    build:
      context: .
      dockerfile: exchange-rate-service/Dockerfile
    networks:
      - default
    ports:
      - "8083:8080"
    volumes:
      - ./exchange-rate-service/src:/app/src
      - ./exchange-rate-service/target:/app/target
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/simuwallet_prod
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: asdf96
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EXCHANGE_RATE_API_URL: https://api.exchangerate-api.com/v6/latest
      EXCHANGE_RATE_API_KEY: cda830e0f72a35c31f16af5e
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy

  db:
    image: postgres:15.3
    container_name: db
    networks:
      - default
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: asdf96
      POSTGRES_DB: simuwallet_prod
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d simuwallet_prod -h db" ]
      interval: 10s
      retries: 5

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:7.2.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093" # 控制器监听端口
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLED: "true"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      retries: 3

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log

networks:
  default:
    name: simu-wallet-network

volumes:
  db-data:
  kafka-data:
  zookeeper-data:
  zookeeper-log:
